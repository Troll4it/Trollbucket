package com.troll.algorithm.leetCode.n257;import com.troll.algorithm.二叉树.TreeNode;import java.util.ArrayList;import java.util.List;/** * author : TangPeng * date : 11/13/22 21:38 * description : */public class 二叉树的所有路径 {    public List<String> binaryTreePaths(TreeNode root) {        List<String> res = new ArrayList();        if (root == null) return res;        List<Integer> paths = new ArrayList<>();        traversal(root, paths, res);        return res;    }    private void traversal(TreeNode root, List<Integer> paths, List<String> res) {        paths.add(root.val);        if (root.left == null && root.right == null) {            StringBuilder sb = new StringBuilder();            for (int i = 0; i < paths.size() - 1; i++) {                sb.append(paths.get(i)).append("->");            }            sb.append(paths.get(paths.size() - 1));            res.add(sb.toString());            return;        }        if (root.left != null) {            traversal(root.left, paths, res);            paths.remove(paths.size() - 1); // 回溯        }        if (root.right != null) {            traversal(root.right, paths, res);            paths.remove(paths.size() - 1); // 回溯        }    }}