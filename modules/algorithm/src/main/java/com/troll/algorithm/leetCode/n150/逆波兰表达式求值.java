package com.troll.algorithm.leetCode.n150;import java.util.Objects;import java.util.Stack;/** * author : TangPeng * date : 11/7/22 23:03 * description : */public class 逆波兰表达式求值 {    public static void main(String[] args) {        String[] tokens = {"4","13","5","/","+"};        int i = evalRPN(tokens);        System.out.println("args = " + i);    }    public static int evalRPN(String[] tokens) {        Stack<Integer> stack = new Stack<>();        for (int i = 0; i < tokens.length; i++) {            String token = tokens[i];            if (Objects.equals(token, "+")) {                stack.push(stack.pop() + stack.pop());            } else if (Objects.equals(token, "-")) {                stack.push(-stack.pop() + stack.pop());            } else if (Objects.equals(token, "*")) {                stack.push(stack.pop() * stack.pop());            } else if (Objects.equals(token, "/")) {                Integer pop1 = stack.pop();                Integer pop2 = stack.pop();                stack.push(pop2 /pop1);            } else {                stack.push(Integer.valueOf(token));            }        }        return stack.pop();    }}