package com.troll.algorithm.leetCode.n101;import com.troll.algorithm.二叉树.TreeNode;import java.util.ArrayDeque;/** * author : TangPeng * date : 11/10/22 00:10 * description : */public class 对称二叉树 {    public boolean isSymmetric(TreeNode root) {        ArrayDeque<TreeNode> deque = new ArrayDeque<>();        deque.offerFirst(root.left);        deque.offerLast(root.right);        while (!deque.isEmpty()) {            TreeNode leftNode = deque.peekFirst();            TreeNode rightNode = deque.peekLast();            if (leftNode == null && rightNode == null) continue;            if (leftNode == null || rightNode == null || leftNode.val != rightNode.val) {                return false;            }            deque.offerFirst(leftNode.left);            deque.offerFirst(leftNode.right);            deque.offerLast(rightNode.right);            deque.offerLast(rightNode.left);        }        return true;    }}