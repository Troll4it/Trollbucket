package com.troll.algorithm.链表.n707;import com.troll.algorithm.链表.ListNode;/** * author : TangPeng * date : 5/27/22 08:49 * description : */public class 设计链表 {    public 设计链表() {    }    // 存储的元素个数    int size;    // 虚拟头结点    ListNode head;    public int get(int index) {        if (index < 0 || index > size) return -1;        ListNode currentHead = this.head;        for (int i = 0; i <= index; i++) {            currentHead = currentHead.next;        }        return currentHead.val;    }    public void addAtHead(int val) {        addAtIndex(0, val);    }    public void addAtTail(int val) {        addAtIndex(size, val);    }    public void addAtIndex(int index, int val) {        // 排除        if (index > size) return;        if (index < 0) {            index = 0;        }        size++;        // 找到插入的前驱节点        ListNode pre = head;        for (int i = 0; i < index; i++) {            pre = pre.next;        }        ListNode addNode = new ListNode(val);        addNode.next = pre.next;        pre.next = addNode;    }    public void deleteAtIndex(int index) {        if (index < 0 || index >= size) return;        size--;        ListNode pred = head;        for (int i = 0; i < index; i++) {            pred = head.next;        }        pred.next = pred.next.next;    }}