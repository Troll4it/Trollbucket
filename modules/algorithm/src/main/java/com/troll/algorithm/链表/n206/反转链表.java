package com.troll.algorithm.链表.n206;import com.troll.algorithm.链表.ListNode;/** * author : TangPeng * date : 8/1/22 07:44 * description : * 给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。 */public class 反转链表 {    /**     * 双指针的方法     * 1.先保存下一个节点     * 2. 当前位置的元素反转下     * 3. 首先移动当前node的前一个     * 4. 移动当前node到下一位     *     * @param head     * @return     */    public ListNode reverseList(ListNode head) {        ListNode pre = null;        ListNode cur = head;        ListNode temp = null;        while (cur != null) {            temp = cur.next;            cur.next = pre;            // 移动pre cur的指针，一定注意两个顺序            pre = cur;            cur = temp;        }        return pre;    }    public ListNode reverseNode(ListNode head) {        return reverse(null, head);    }    public ListNode reverse(ListNode pre, ListNode cur) {        if (cur == null) {            return pre;        }        ListNode temp = null;        temp = cur.next; //先保存下一个节点        cur.next = pre; // 反转        return reverse(cur, temp);    }}