package com.troll.algorithm.链表.n24;import com.troll.algorithm.链表.ListNode;/** * author : TangPeng * date : 8/4/22 08:25 * description : */public class 两两交换链表中的节点 {    /**     * 递归方法     *     * @param head 利用虚拟头节点     * @return 交换后的链表     */    public ListNode swapPairs(ListNode head) {        if (head == null || head.next == null) return head;        ListNode next = head.next;        // 递归下两个        ListNode listNode = swapPairs(next.next);        // 交换数据        next.next = head;        head.next = listNode;        return head;    }    /**     * 虚拟节点法     *     * @param head     * @return     */    public ListNode swap(ListNode head) {        if (head == null || head.next == null) return head;        ListNode dummyNode = new ListNode(0);        dummyNode.next = head;        ListNode prev = dummyNode;        while (prev.next != null && prev.next.next != null) {            ListNode temp = head.next.next;            prev.next = head.next;            head.next.next = head;            head.next = temp;            prev = head;            head = head.next;        }        return dummyNode.next;    }}