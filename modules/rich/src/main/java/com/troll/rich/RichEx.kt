package com.troll.richimport java.math.BigDecimal/** * author : TangPeng * date : 3/19/22 21:48 * description : *///建议要有长期策略以及短期策略。长期策略是用来赚增长+通胀的大钱。短期波段策略赚的是情绪以及波动的钱。//网格策略就是一个中短期波段策略。它要吃的并不是长牛利润，而是波动利润。回顾各个金融品种，你会发现有些品种波动极其巨大，但长期回头看几乎没有涨幅。如果一个短期波动巨大的品种，与你长期持有的品种相关性又很低，那简直就是极品了。/** * [moneyPer] : 资金下一个网格的比例 * [baseTopPoint] : 这个是已1为基础点，用来判断当前大致下跌什么位置 * [fallPer] : 下跌的比例值 * */fun rich(    top: Double,    putMoney: Double,    moneyPer: Double,    grid: Int = 30,    fall: Double = 0.1,    baseTopPoint: Double = 1.0) {    val fallPer = BigDecimal.valueOf(1).subtract(BigDecimal.valueOf(fall)).toDouble()    var baseTopPoint = baseTopPoint    var putMoney = putMoney    var point = top    var total = 0.0    var circulation = 0.0 // 单次购买的份数    var totalCirculation = 0.0 // 总份数    var cost = 0.0    var showHard = 0.0    var printPutMoney =0.0        println("| 下跌次数| 下跌幅度| 基础净值 | 现价 | 买入量 | 份数 | 持仓 | 成本 |市值 |  梭哈回本| ")    println("| ---  | --- | --- | --- | --- | --- | --- | --- | --- | --- | ")    for (i in 0..grid) {        if (i > 0) {            putMoney = putMoney            baseTopPoint *= fallPer            point *= fallPer            total += putMoney            circulation = putMoney / point            totalCirculation += circulation            cost = total / totalCirculation            showHard = BigDecimal.valueOf(1 / baseTopPoint).setScale(4, BigDecimal.ROUND_DOWN).toDouble() * 100            printPutMoney =  if (i ==0){  0.0 }else{  putMoney }        }        println(            "| $i " +                    "| ${fall * 100}%" +                    "| ${BigDecimal.valueOf(baseTopPoint).setScale(4, BigDecimal.ROUND_DOWN)}" +                    "| ${BigDecimal.valueOf(point).setScale(4, BigDecimal.ROUND_DOWN)}" +                    "| ${BigDecimal.valueOf(printPutMoney).setScale(4, BigDecimal.ROUND_DOWN)} " +                    "| ${BigDecimal.valueOf(circulation).setScale(4, BigDecimal.ROUND_DOWN)} " +                    "| ${BigDecimal.valueOf(totalCirculation).setScale(4, BigDecimal.ROUND_DOWN)} " +                    "| ${BigDecimal.valueOf(cost).setScale(4, BigDecimal.ROUND_DOWN)} " +                    "| ${BigDecimal.valueOf(total).setScale(4, BigDecimal.ROUND_DOWN)} " +                    "| ${BigDecimal.valueOf(showHard).setScale(2, BigDecimal.ROUND_DOWN)} % " +                    "| "        )//        println(//            "| 下跌次数 | 基础净值 | 现价 | 买入 | 份数 | 市值 | 持仓 | 成本 | 梭哈| "//            +"下跌${i.formatDoubleDigits()} "//                    + "  基础净值  ${BigDecimal.valueOf(baseTopPoint).setScale(4, BigDecimal.ROUND_DOWN)}"//                    + "  净值  ${BigDecimal.valueOf(point).setScale(4, BigDecimal.ROUND_DOWN)} "//                    + "  买入  ${BigDecimal.valueOf(putMoney).setScale(4, BigDecimal.ROUND_DOWN)}"//                    + "  购买份数  ${BigDecimal.valueOf(circulation).setScale(4, BigDecimal.ROUND_DOWN)}"//                    + "  总投入  ${BigDecimal.valueOf(total).setScale(4, BigDecimal.ROUND_DOWN)}"//                    + "  总份数   ${BigDecimal.valueOf(totalCirculation).setScale(4, BigDecimal.ROUND_DOWN)}"//                    + "  成本   ${BigDecimal.valueOf(cost).setScale(4, BigDecimal.ROUND_DOWN)}"//                    + "  梭哈回本  ${BigDecimal.valueOf(showHard).setScale(2, BigDecimal.ROUND_DOWN)} %"//        )        if (i > 0)            putMoney *= moneyPer    }}