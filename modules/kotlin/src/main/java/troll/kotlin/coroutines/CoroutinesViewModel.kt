package troll.kotlin.coroutinesimport kotlinx.coroutines.*import troll.btc.log.TLogimport troll.eth.base.viewbinding.BaseViewModelclass CoroutinesViewModel : BaseViewModel() {    suspend fun getId(): String {        return GlobalScope.async(Dispatchers.IO) {            delay(1000)            "Id"        }.await()    }    suspend fun getAvatar(id: String): String {        return GlobalScope.async(Dispatchers.IO) {            delay(1000)            "头像$id"        }.await()    }    fun testJob() {        runBlocking {            val job = launch {                delay(1000)            }            job.log()            job.cancel()            job.log()            delay(1500)        }    }}fun Job.log() {    TLog.i(        "isActive = $isActive   isCancelled = $isCancelled    isCompleted = $isCompleted  Thread:${Thread.currentThread().name}",        "Job的生命周期"    )}