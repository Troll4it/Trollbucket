package troll.kotlin.animationimport android.view.LayoutInflaterimport troll.btc.extensions.onClickimport troll.eth.base.viewbinding.BaseActivityimport troll.kotlin.databinding.ActivityAnimationDetailBinding/** * author : TangPeng * date : 4/24/22 15:35 * description : */class AnimationDetailActivity : BaseActivity<ActivityAnimationDetailBinding>() {    override fun getBinding(inflater: LayoutInflater): ActivityAnimationDetailBinding =        ActivityAnimationDetailBinding.inflate(inflater)    override fun flowData() {    }    override fun flowView() {        bd.animationButtonStart.onClick {            valueAnimator()        }        bd.animationButtonStop.onClick {}    }    /**     * ValueAnimator使用     */    private fun valueAnimator() {//        val animatorInt = ValueAnimator.ofInt(0, 1000).apply {//            duration = 2000//            repeatCount = 0//        }//        animatorInt.addUpdateListener { animation ->//            val value = animation?.animatedValue as Int//            TLog.i("动画", value.toString())//            val layoutParams = bd.animationView.layoutParams//            layoutParams.width = value.toInt()//            bd.animationView.layoutParams = layoutParams//        }//        animatorInt.start()//       Float//        val animatorFloat = ValueAnimator.ofFloat(0f, 1000f).apply {//            duration = 2000//            repeatCount = 0//        }//        animatorFloat.addUpdateListener { animation ->//            val value = animation?.animatedValue as Float//            TLog.i("动画", value.toString())//            val layoutParams = bd.animationView.layoutParams//            layoutParams.width = value.toInt()//            bd.animationView.layoutParams = layoutParams//        }//        animatorFloat.start()//        val animatorArgb = ValueAnimator.ofArgb(R.color.black, R.color.color_FF03DAC5).apply {//            duration = 2000//        }//        animatorArgb.addUpdateListener { animation ->//            val value = animation?.animatedValue as Int//            TLog.i("动画", value.toString())//            bd.animationView.setBackgroundColor(value)////        }//        animatorArgb.start()    }}