package troll.kotlin.timerimport android.view.LayoutInflaterimport androidx.lifecycle.lifecycleScopeimport troll.btc.extensions.onClickimport troll.btc.log.TLogimport troll.btc.util.time.timer.FlowTimerimport troll.eth.base.viewbinding.BaseActivityimport troll.kotlin.databinding.ActivityTimerBinding/** * author : TangPeng * date : 11/22/22 17:10 * description : */class TimerActivity : BaseActivity<ActivityTimerBinding>() {    private val TAG = "倒计时"    override fun getBinding(inflater: LayoutInflater): ActivityTimerBinding =        ActivityTimerBinding.inflate(inflater)    override fun flowData() {    }    var timer: FlowTimer? = null    override fun flowView() {        timer = FlowTimer(20, lifecycleScope, 1000, onStart = {            TLog.i("onStart", TAG)        }, onTick = {            TLog.i("onTick:: $it", TAG)        }, onFinish = {            TLog.i("onFinish", TAG)        }, onStop = {            TLog.i("onStop", TAG)        }, onCancel = {            TLog.i("onCancel", TAG)        })        bd.timerStart.onClick {            val h = LinkedHashMap<String, String>()            h.put("2", "1")            h.put("2", "2")            h.put("2", "3")            h.put("2", "4")            h.values.forEach {                TLog.i("$ 键值对 $it", TAG)            }            h.keys.forEach {                TLog.i("$ 键值对 $it", TAG)            }        }        bd.timerStop.onClick {            timer?.stop()        }        bd.timerRestart.onClick {            timer?.reStart()        }        bd.timerCancel.onClick {            timer?.cancel()        }    }}