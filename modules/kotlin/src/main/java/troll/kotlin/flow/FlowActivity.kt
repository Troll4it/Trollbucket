package troll.kotlin.flowimport android.os.CountDownTimerimport android.view.LayoutInflaterimport androidx.activity.viewModelsimport com.troll.bus.Busimport kotlinx.coroutines.MainScopeimport kotlinx.coroutines.flow.asFlowimport kotlinx.coroutines.flow.shareInimport troll.btc.extensions.onClickimport troll.eth.base.viewbinding.BaseActivityimport troll.kotlin.databinding.ActivityFlowBindingclass FlowActivity : BaseActivity<ActivityFlowBinding>() {    private val vm: FlowViewModel by viewModels()    override fun getBinding(inflater: LayoutInflater): ActivityFlowBinding =        ActivityFlowBinding.inflate(inflater)    override fun flowData() {        Bus.get().with(this).onValue<String>(1) {            println("数据接收$it")        }    }    override fun flowView() {        bd.busButtonSend.onClick {//            bus()//            monitorFlow()//            cancelFlow()//            distinctUntilChanged()            countDownTimer()            timer?.start()        }    }    var timer: CountDownTimer? = null    fun countDownTimer() {        timer = object : CountDownTimer(20, 1) {            override fun onTick(p0: Long) {                println("倒计时 $p0   ::::::::${timer.toString()}")            }            override fun onFinish() {                timer?.cancel()                println("倒计时结束${timer.toString()}")                countDownTimer()                timer?.start()            }        }    }    private fun bus() {        Bus.get().send(1, "测试发送")    }    private fun monitorFlow() {        vm.monitorFlow()    }    private fun cancelFlow() {        vm.cancelFlow()    }    private fun distinctUntilChanged() {        vm.distinctUntilChanged()    }}fun main() {//    println("0.02331".decimalFormatDigits2())}