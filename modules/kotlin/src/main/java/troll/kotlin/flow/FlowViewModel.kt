package troll.kotlin.flowimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.flow.*import troll.btc.constants.EMPTYimport troll.eth.base.viewbinding.BaseViewModel/** * author : TangPeng * date : 5/12/22 08:54 * description : */class FlowViewModel : BaseViewModel() {    var test: String = EMPTY    fun timeFlow(): Flow<String> {        val flow = flow {            var time = 0            while (true) {                kotlinx.coroutines.delay(100)                emit(time++)            }        }        val map = flow.sample(1000).flowOn(Dispatchers.IO).map {            test = test.plus(":").plus(it.toString())            test        }        return map    }}fun main() {}