package troll.kotlin.flowimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.delayimport kotlinx.coroutines.withContext/** * author : TangPeng * date : 8/12/22 16:17 * description : */class Test {    suspend fun testCoroutine() {        val userInfo = getUserInfo()        val list = getFriendList(userInfo)        val feedList = getFeedList(userInfo, list)        println(feedList)    }    suspend fun getUserInfo(): String {        withContext(Dispatchers.IO) {            delay(1000)        }        return "getUserInfo"    }    suspend fun getFriendList(user: String): String {        withContext(Dispatchers.IO) {            delay(1000)        }        return user    }    suspend fun getFeedList(user: String, list: String): String {        withContext(Dispatchers.IO) {            delay(1000)        }        return user.plus(list)    }}