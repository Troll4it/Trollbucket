package troll.kotlin.shortCutimport android.content.Contextimport android.content.Intentimport android.content.pm.ShortcutInfoimport android.content.pm.ShortcutManagerimport android.graphics.drawable.Iconimport android.os.Buildimport android.view.LayoutInflaterimport troll.btc.extensions.formatimport troll.btc.extensions.onClickimport troll.eth.base.viewbinding.BaseActivityimport troll.kotlin.Rimport troll.kotlin.databinding.ActivityShortCutBindingimport troll.kotlin.flow.FlowActivityimport troll.kotlin.screen.ScreenActivity/** * author : TangPeng * date : 5/14/22 14:43 * description : */class ShortCutActivity : BaseActivity<ActivityShortCutBinding>() {    override fun getBinding(inflater: LayoutInflater): ActivityShortCutBinding =        ActivityShortCutBinding.inflate(inflater)    override fun flowData() {    }    override fun flowView() {        bd.shortMbAdd.onClick {            add(this)        }        bd.shortMbUpdate.onClick {            updata(this)        }        bd.shortMbQuery.onClick {            queryShortCutId(this).forEach {                println("查询出来的 id::::$it")            }        }    }    private fun add(context: Context) {        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1) {            val mShortcutManager = context.getSystemService(ShortcutManager::class.java)            val newIntent =                intent ?: Intent(context, FlowActivity::class.java)            newIntent.setPackage(context.packageName)            newIntent.action = Intent.ACTION_VIEW            newIntent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK            val info = ShortcutInfo.Builder(context, "11111")                .setShortLabel("入口3")                .setLongLabel("入口3")                .setIcon(Icon.createWithResource(context, R.drawable.ic_shortcut_red_packet))                .setIntent(newIntent)                .build()            mShortcutManager.dynamicShortcuts = mutableListOf(info)        }    }    private fun queryShortCutId(context: Context): MutableList<String> {        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1) {            val mShortcutManager = context.getSystemService(ShortcutManager::class.java)            val dynamicShortcuts = mShortcutManager.dynamicShortcuts            return dynamicShortcuts.map {                it.id            }.toMutableList()        }        return mutableListOf()    }    private fun updata(context: Context) {        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1) {            val mShortcutManager = context.getSystemService(ShortcutManager::class.java)            val newIntent =                intent ?: Intent(context, FlowActivity::class.java)            newIntent.setPackage(context.packageName)            newIntent.action = Intent.ACTION_VIEW            newIntent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK            val info = ShortcutInfo.Builder(context, "11111")                .setShortLabel("入口1")                .setLongLabel("入口1")                .setIcon(Icon.createWithResource(context, R.drawable.ic_shortcut_red_packet))                .setIntent(newIntent)                .build()            val test =                intent ?: Intent(context, ScreenActivity::class.java)            test.setPackage(context.packageName)            test.action = Intent.ACTION_VIEW            test.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK            val testInfo = ShortcutInfo.Builder(context, "22222")                .setShortLabel("入口2")                .setLongLabel("入口2")                .setIcon(Icon.createWithResource(context, R.drawable.ic_shortcut_red_packet))                .setIntent(test)                .build()            val mutableListOf = mutableListOf<ShortcutInfo>()            mutableListOf.add(info)            mutableListOf.add(testInfo)            mShortcutManager.dynamicShortcuts = mutableListOf        }    }    private fun update(context: Context, list: MutableList<ShortcutInfo>) {        val curentIds = queryShortCutId(context)    }}fun main() {    println("格式化数据${111.1.format(2)}")    println("格式化数据${111.11113333f.format(2)}")}