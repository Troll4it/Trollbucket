package wan.home.viewmodelimport androidx.lifecycle.viewModelScopeimport kotlinx.coroutines.flow.MutableStateFlowimport kotlinx.coroutines.flow.StateFlowimport kotlinx.coroutines.flow.asStateFlowimport kotlinx.coroutines.launchimport troll.eth.base.viewbinding.BaseViewModelimport wan.home.bean.ArticleDataimport wan.home.bean.Bannerimport wan.home.repo.HomeRepo/** * author : TangPeng * date : 2/28/22 17:55 * description : */class ArticleViewModel : BaseViewModel() {    private val repo = HomeRepo()    private val _articleState = MutableStateFlow(mutableListOf<ArticleData>())    val articleState: StateFlow<MutableList<ArticleData>> = _articleState.asStateFlow()    private val _bannerState = MutableStateFlow(mutableListOf<Banner>())    val bannerState: StateFlow<MutableList<Banner>> = _bannerState.asStateFlow()    fun getHome(page: Int = 1) {    }    /**     * 获取文章首页     */    suspend fun getHomeArticle(page: Int = 1) {        _articleState.value = repo.getHomeArticle(page).data?.datas?.toMutableList()            ?: emptyList<ArticleData>().toMutableList()    }    /**     * 获取banner     */    suspend fun getBanner() {        viewModelScope.launch {            val data = repo.getBanner().data?.toMutableList()            _bannerState.value = mutableListOf<Banner>().apply {                add(Banner().apply {                    list = data                })            }        }    }}