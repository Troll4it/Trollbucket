package wan.projectimport android.view.ViewGroupimport androidx.recyclerview.widget.ListAdapterimport androidx.recyclerview.widget.RecyclerViewimport coil.loadimport troll.btc.extensions.layoutInflaterimport troll.btc.extensions.onClickimport troll.eth.base.rv.BaseDiffUtilimport wan.project.bean.ProjectContentimport wan.project.databinding.LayoutItemProjectTreeBinding/** * author : TangPeng * date : 3/4/22 17:43 * description : */class ProjectTreeAdapter(private val click: (ProjectContent) -> Unit) :    ListAdapter<ProjectContent, ProjectTreeAdapter.ProjectTreeVH>(ProjectTreeDiff) {    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ProjectTreeVH {        val bd =            LayoutItemProjectTreeBinding.inflate(parent.context.layoutInflater(), parent, false)        return ProjectTreeVH(bd, click)    }    override fun onBindViewHolder(holder: ProjectTreeVH, position: Int) {        holder.bind(getItem(position))    }    class ProjectTreeVH(bd: LayoutItemProjectTreeBinding, val click: (ProjectContent) -> Unit) :        RecyclerView.ViewHolder(bd.root) {        private val iv = bd.projectTreeIv        private val tvTitle = bd.projectTreeTvTitle        private val tvContent = bd.projectTreeTvContent        private var currentData: ProjectContent? = null        init {            bd.root.onClick {                currentData?.let { click.invoke(it) }            }        }        fun bind(content: ProjectContent) {            currentData = content            iv.load(content.envelopePic)            tvTitle.text = content.title            tvContent.text = content.desc        }    }}object ProjectTreeDiff : BaseDiffUtil<ProjectContent>() {    override fun areContentsTheSame(oldItem: ProjectContent, newItem: ProjectContent): Boolean {        return oldItem.id == newItem.id    }}