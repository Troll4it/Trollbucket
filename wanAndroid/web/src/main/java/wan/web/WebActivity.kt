package wan.webimport android.annotation.SuppressLintimport android.content.Intentimport android.net.Uriimport android.view.LayoutInflaterimport android.view.ViewGroupimport android.webkit.WebViewimport android.webkit.WebViewClientimport android.widget.FrameLayoutimport com.alibaba.android.arouter.facade.annotation.Autowiredimport com.alibaba.android.arouter.facade.annotation.Routeimport troll.btc.constants.EMPTYimport troll.eth.base.viewbinding.BaseActivityimport wan.common.RoutePathimport wan.common.RouterKeyimport wan.web.databinding.ActivityWebBinding/** * author : TangPeng * date : 3/7/22 17:17 * description : */@Route(path = RoutePath.WEB_ACTIVITY)class WebActivity : BaseActivity<ActivityWebBinding>() {    @JvmField    @Autowired(name = RouterKey.URL)    var url: String = EMPTY    @JvmField    @Autowired(name = RouterKey.TITLE)    var title: String = EMPTY    private lateinit var web: WebView    override fun getBinding(inflater: LayoutInflater): ActivityWebBinding =        ActivityWebBinding.inflate(inflater)    @SuppressLint("SetJavaScriptEnabled")    override fun flowData() {        url = intent.getStringExtra(RouterKey.URL).toString()        title = intent.getStringExtra(RouterKey.TITLE).toString()        web = WebView(this)        val webSetting = web.settings        webSetting.domStorageEnabled = true        webSetting.useWideViewPort = true        webSetting.loadWithOverviewMode = true        webSetting.javaScriptEnabled = true        web.webViewClient = object : WebViewClient() {            override fun shouldOverrideUrlLoading(view: WebView?, url: String?): Boolean {                if (url == null) {                    return false                }                try {                    if (url.startsWith("weixin://") || url.startsWith("jianshu://")) {                        val intent = Intent(Intent.ACTION_VIEW, Uri.parse(url))                        startActivity(intent)                        return true                    }                } catch (e: Exception) {                    return true                }                view?.loadUrl(url)                return true            }        }    }    override fun flowView() {        val layoutParams: FrameLayout.LayoutParams = FrameLayout.LayoutParams(            ViewGroup.LayoutParams.MATCH_PARENT,            ViewGroup.LayoutParams.MATCH_PARENT        )        web.layoutParams = layoutParams        bd.webLayout.addView(web)        bd.webTvTitle.text = title        web.loadUrl(url)    }    override fun onDestroy() {        web.clearHistory()        (web.parent as ViewGroup).removeView(web)        web.destroy()        super.onDestroy()    }}