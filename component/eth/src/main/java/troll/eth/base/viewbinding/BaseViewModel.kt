package troll.eth.base.viewbindingimport androidx.lifecycle.ViewModelimport troll.eth.GenericUtilimport kotlin.reflect.KClassabstract class BaseViewModel : ViewModel() {    open fun onCreate() {}    final override fun onCleared() {        onDestroy()    }    open fun onDestroy() {}}fun <VM : BaseViewModel> getViewModelClass(any: Any) = getViewModelKClass<VM>(any).java@Suppress("UNCHECKED_CAST")fun <VM : BaseViewModel> getViewModelKClass(any: Any) =    requireNotNull(GenericUtil.getClassType(any, ViewModel::class) as KClass<VM>)